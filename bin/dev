#!/usr/bin/env bash

CONTAINER="grapple-demo"
IMAGE="grapple-demo-img"
PID="tmp/pids/server.pid"

bin_loc="$( dirname "$(realpath ${BASH_SOURCE[0]})" )"
cd $bin_loc
cd ..
set -x
case "$1" in
	install)
		echo "dev: Installing dependencies..."
		$bin_loc/bundle install
		;;

	db:init|init)
		echo "dev: Migrating database..."
		$bin_loc/rails db:migrate
		rake load_fixtures
		;;

	build)
		echo "dev: Building Docker image..."
		docker build -t $IMAGE .
		;;

	inspect)
		docker exec -it $CONTAINER /bin/bash
		;;

	start)
		if [ ! -z "$2" ] && [ "$2" == "-f" ] || [ "$2" == "--force" ] ; then
			echo "dev: Rebuilding container..."
			docker stop $CONTAINER
			docker container rm grapple-demo;

			if [ -f $PID ] ; then rm -f $PID ; fi

			echo "dev: Creating and starting container..."
		fi

		if [ "$(docker ps -a | grep $CONTAINER)" == "" ]; then
			echo "dev: Creating container..."
			docker run --privileged -v $(pwd):/$CONTAINER -p 5000:5000/tcp --name $CONTAINER -it $IMAGE
			# docker run --privileged -v $(pwd):/grapple-demo -p 5000:5000/tcp --name grapple-demo -it grapple-demo-img
			# docker create --privileged -v $(pwd):/$CONTAINER -p 5000:5000/tcp --name $CONTAINER -it $IMAGE
		else
			echo "dev: Starting container..."
			docker start $CONTAINER
		fi
		;;
	
	stop)
		if [ ! -z "$2" ] && [ "${2}" == "-f" ] || [ "${2}" == "--force" ] ; then
			echo "dev: Stopping and killing container..."
			docker stop $CONTAINER
			docker container rm grapple-demo;

			if [ -f $PID ] ; then rm -f $PID ; fi
		else
			echo "dev: Stopping container..."
			docker stop $CONTAINER
		fi
		;;

	dev)
		if [ "$2" == "-u" || "$2" == "--update" ]; then
			echo "dev: updating grapple..."
			$bin_loc/bundle update grapple
		fi
		echo "re-"
		echo "dev: Starting a local development server..."
		$bin_loc/bundle update grapple && $bin_loc/rails server -p 5000
		;;

	serve)
		echo "dev: Running first time installation (this is going to take a while)..."
		$bin_loc/rails db:migrate
		rake load_fixtures
		docker build -t $IMAGE .
		echo "dev: Successfully built the database and Docker image."
		echo "dev: You will not need to do this again unless you make changes to the Dockerfile or dependencies. Use the 'dev start' command to start the container from now on."
		docker run --privileged -v $(pwd):/$CONTAINER -p 5000:5000/tcp --name $CONTAINER -it grapple-demo-img
		;;
	-h|--help)
		echo "Usage: dev [cmd] [options]"
		echo ""
		echo "Available commands:"
		echo "  install            Install project dependencies"
		echo "  db:init, init      Initialize the database. Creates the requisite tables in the database and seeds it"
		echo "  build              Builds the Docker image"
		echo "  inspect            Accesses the container's bash terminal"
		echo "  dev                Start a local development server"
		echo "     options:"
		echo "     -u, --update    Updates grapple before launch"
		echo "  start              Starts the container from an existing image"
		echo "     options:"
		echo "     -f, --force     Forcefully stops/removes the container and re-creates it before launch"
		echo "  stop               Stops the container"
		echo "     options:"
		echo "     -f, --force     Forcefully stops/removes the container"
		echo "  serve              Builds the Docker image, initializes the database, and starts the container"
		echo "  -h, --help         Display this message"
		;;

	*)
		echo "dev: '$1' is not a valid command. see 'dev --help'"
	;;
esac
set +x